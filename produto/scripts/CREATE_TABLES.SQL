/*
 * USUARIO: QUALQUER PESSOA QUE SE CADASTRAR NO CRM CRIARA UM NOVO REGISTRO EM USUARIO.
 */
CREATE TABLE USUARIO (
    CODUSU INTEGER     NOT NULL,   -- CODIGO DO USUARIO
	NOMUSU VARCHAR(40) NOT NULL,   -- NOME DO USUARIO
	LOGUSU VARCHAR(15) NOT NULL,   -- LOGIN DO USUARIO
	SENUSU VARCHAR(40) NOT NULL,   -- SENHA DO USUARIO
	IDUSUATIV CHAR(1) DEFAULT 'I'  -- SITUACAO DO USUARIO (ATIVO/INATIVO)
);

/*
 * EMPRESA A QUAL PERTENCE UM OU MAIS FUNCIONARIOS.
 */
CREATE TABLE EMPRESA (
	CODEMP INTEGER      NOT NULL,              -- CODIGO DA EMPRESA
	IDTIPINSJUR CHAR(1) DEFAULT 'J' NOT NULL , -- TIPO DE INSCRICAO JURIDICA (PESSOA JURIDICA OU FISICA)
	NUMINSJUR VARCHAR(14) NOT NULL,            -- NUMERO DA INSCRICAO JURIDICA (CPF OU CNPJ)
	NOMFAN VARCHAR(20) NOT NULL,               -- NOME FANTASIA
	RAZSOC VARCHAR(30),                        -- RAZAO SOCIAL
	TELEMP VARCHAR(9),                         -- TELEFONE DA EMPRESA
	CELEMP VARCHAR(9)                         -- CELULAR DA EMPRESA
);

/*
 * DEFINE OS POSSIVEIS PAPEIS QUE O USUARIO PODE ASSUMIR NO SISTEMA. 
 */
CREATE TABLE TIPOFUNCIONARIO (
	CODTIPFUN INTEGER NOT NULL,
	NOMTIPFUN VARCHAR(20) NOT NULL
);

/*
 * FUNCIONARIO: RELACAO ENTRE USUARIO E EMPRESA. AS DATAS INICIAL E FINAL
 * AJUDARAO A MANTER O HISTORICO DO USUARIO EM RELACAO AS EMPRESAS QUE ESTE
 * ATUOU.
 */
CREATE TABLE FUNCIONARIO (
	CODFUN INTEGER  NOT NULL,    -- CODIGO DO FUNCIONARIO.
	CODUSU INTEGER  NOT NULL,    -- CODIGO DO USUARIO.
	CODEMP INTEGER  NOT NULL,    -- CODIGO DA EMPRESA.
	CODTIPFUN INTEGER NOT NULL,  -- TIPO DE USUARIO
	DATINI DATE,                 -- DATA INICIAL DO PERIODO DO USUARIO NA EMPRESA
	DATFIM DATE                  -- DATA FINAL DO PERIODO DO USUARIO NA EMPRESA
);

/*
 * OBJETO QUE SERÁ MANIPULADO NO SISTEMA. DEFINE ATIVIDADES QUE SERÃO FEITAS ENTRE USUARIOS(FUNCINARIOS) 
 * DO SISTEMA E SEUS CLIENTES.
 */
CREATE TABLE ATIVIDADE (
	CODATI INTEGER     NOT NULL,  -- CODIGO DA ATIVIDADE
	NOMATI VARCHAR(30) NOT NULL,  -- NOME DA ATIVIDADE
	DESATI VARCHAR(500),          -- DESCRICAO DA ATIVIDADE
	DATINI DATE NOT NULL,         -- DATA INICIAL DA ATIVIDADE
	DATFIN DATE,                  -- DATA FINAL DA ATIVIDADE
	CODTIPATI INTEGER,            -- TIPO DA ATIVIDADE
	OBSANDATI VARCHAR(500),       -- OBSERVACAO DE ANDAMENTO DA ATIVIDADE
	STATUS CHAR(1) NOT NULL,      -- STATUS
	CODFUNRES INTEGER NOT NULL,   -- CODIGO DE FUNCIONARIO RESPONSAVEL
	DESCON VARCHAR(500)           -- DESCRICAO DO CONVITE
);

/*
 * TIPOS DE ATIVIDADES.
 */
CREATE TABLE TIPO_ATIVIDADE (
    CODTIPATI INTEGER  NOT NULL,    -- CODIGO DO TIPO DE ATIVIDADE.
	NOMTIPATI VARCHAR(20) NOT NULL  -- NOME DO TIPO DE ATIVIDADE
);

/*
 * FUNCIONARIOS AOS QUAIS OS CONVITES SERAO ENVIADOS
 */
CREATE TABLE CONVIDADO (
	CODCON INTEGER  NOT NULL, -- CODIGO DO CONVITE.
	CODFUN INTEGER  NOT NULL,  -- CODIGO DE FUNCIONARIO.
	IDCONACE CHAR(1) DEFAULT 'N' NOT NULL  -- CONVITE ACEITO
);

CREATE TABLE LEMBRETE (
    CODFUN INTEGER NOT NULL,
	CODATI INTEGER NOT NULL,
	IDTIPLEM CHAR(1) NOT NULL,
	DATINILEM DATE
);

/*
 * CLIENTES QUE SERAO RELACIONADOS AS EMPRESAS
 */
CREATE TABLE CLIENTE (
	CODCLI INTEGER        NOT NULL,            -- CODIGO DO CLIENTE.
	CODEMP INTEGER        NOT NULL,            -- CODIGO DA EMPRESA "DONA" DO CLIENTE.
	NUMINSJUR VARCHAR(14) NOT NULL,            -- NUMERO DE INSCRICAO JURIDICA - CPF OU CNPJ.
	NOMFAN VARCHAR(20)    NOT NULL,            -- NOME FANTASIA.
	RAZSOC VARCHAR(30),                        -- RAZAO SOCIAL.
	TELEMP CHAR(9),                            -- TELEFONE EMPRESA.
	CELEMP CHAR(9)                             -- CELULAR EMPRESA.
);

/* 
 * FUNCIONARIO RESPONSAVEL PELO CONTATO COM O CLIENTE. AQUI TAMBÉM SERÁ GUARDADO O HISTORICO
 * DOS FUNCIONARIOS RESPONSAVEIS PELO CLIENTE.
 */
CREATE TABLE FUN_RESPONSAVEL (
	CODCLI INTEGER NOT NULL,  -- CODIGO DO CLIENTE.
	CODFUN INTEGER NOT NULL,  -- CODIGO DO FUNCIONARIO.
	CODEMP INTEGER NOT NULL,
	DATINI DATE NOT NULL,     -- DATA INCIAL DO PERIODO QUE O FUNCIOARIO RESPONDE PELO CLIENTE.
	DATFIM DATE               -- DATA FINAL DO PERIODO QUE O FUNCIOARIO RESPONDE PELO CLIENTE.
);

/*
 * PESSOAS RELACIONADAS AOS CLIENTES, QUE REPRESENTARAO ESTES EM COMUNICACOES ENTRE EMPRESAS E CLIENTES.
 */
CREATE TABLE CONTATO (
	CODCON INTEGER     NOT NULL,  -- CODIGO DO CONTATO
	CODCLI INTEGER     NOT NULL,  -- CODIGO DO CLIENTE
	NOMCON VARCHAR(40) NOT NULL,  -- NOME DO CONTATO
	DATNAS DATE,                  -- DATA DE NASCIMENTO
	TELCON VARCHAR(9),            -- TELEFONE CONTATO
	CELCON VARCHAR(9),            -- CELULAR CONTATO.
	MAILCON VARCHAR(50)           -- EMAIL DO CONTATO.
);


ALTER TABLE USUARIO ADD CONSTRAINT PK_USUARIO PRIMARY KEY (CODUSU);
ALTER TABLE EMPRESA ADD CONSTRAINT PK_EMPRESA PRIMARY KEY (CODEMP);
ALTER TABLE TIPOFUNCIONARIO ADD CONSTRAINT PK_TIPFUN PRIMARY KEY (CODTIPFUN);
ALTER TABLE FUNCIONARIO ADD CONSTRAINT PK_FUNCIONARIO PRIMARY KEY (CODFUN);
ALTER TABLE ATIVIDADE ADD CONSTRAINT PK_ATIVIDADE PRIMARY KEY (CODATI);
ALTER TABLE TIPO_ATIVIDADE ADD CONSTRAINT PK_TIPOATIV PRIMARY KEY (CODTIPATI);
ALTER TABLE LEMBRETE ADD CONSTRAINT PK_LEMBRETE PRIMARY KEY (CODFUN, CODATI);
ALTER TABLE CONVIDADO ADD CONSTRAINT PK_CONVIDADO PRIMARY KEY (CODCON, CODFUN);
ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE PRIMARY KEY (CODCLI);
ALTER TABLE FUN_RESPONSAVEL ADD CONSTRAINT PK_FUN_RESP PRIMARY KEY(CODCLI, CODFUN, CODEMP, DATINI);
ALTER TABLE CONTATO ADD CONSTRAINT PK_CONTATO PRIMARY KEY (CODCON) ;

-- CHECK CONSTRAINT PARA VALIDAÇÃO DAS SITUACOES POSSIVEIS: ATIVO(A) E INATIVO(I)
ALTER TABLE USUARIO ADD CONSTRAINT CHK_IDSITUATIV CHECK(IDUSUATIV IN ('I', 'A'));


-- CHECK CONSTRAINT PARA TIPO DE INSCRICAO JURIDICA: J(JURIDICA) E F(FISICA).
ALTER TABLE EMPRESA ADD CONSTRAINT CHK_IDTIPINSJUR CHECK(IDTIPINSJUR IN ('J', 'F'));

ALTER TABLE FUNCIONARIO ADD CONSTRAINT FK_FUNC_USU FOREIGN KEY (CODUSU) REFERENCES USUARIO(CODUSU);
ALTER TABLE FUNCIONARIO ADD CONSTRAINT FK_FUNC_EMP FOREIGN KEY (CODEMP) REFERENCES EMPRESA(CODEMP);
ALTER TABLE FUNCIONARIO ADD CONSTRAINT FK_FUNC_TIPOFUN FOREIGN KEY (CODTIPFUN) REFERENCES TIPOFUNCIONARIO(CODTIPFUN);
ALTER TABLE FUNCIONARIO ADD CONSTRAINT FK_FUNC_DATAS CHECK(DATINI <= DATFIM);

ALTER TABLE ATIVIDADE ADD CONSTRAINT CHK_DATAS_ATIV CHECK(DATINI <= DATFIN);
ALTER TABLE ATIVIDADE ADD CONSTRAINT FK_ATIV_TIPATI FOREIGN KEY (CODTIPATI) REFERENCES TIPO_ATIVIDADE(CODTIPATI);
ALTER TABLE ATIVIDADE ADD CONSTRAINT FK_ATIV_FUNRES FOREIGN KEY (CODFUNRES) REFERENCES FUNCIONARIO(CODFUN);

ALTER TABLE CONVIDADO ADD CONSTRAINT FK_CONVID_FUN FOREIGN KEY (CODFUN) REFERENCES FUNCIONARIO(CODFUN);
ALTER TABLE CONVIDADO ADD CONSTRAINT CHK_CONVID_CON CHECK (IDCONACE IN('S', 'N'));

ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLI_EMP FOREIGN KEY (CODEMP) REFERENCES EMPRESA(CODEMP);

ALTER TABLE FUN_RESPONSAVEL ADD CONSTRAINT FK_FUN_RESP_CLI FOREIGN KEY (CODCLI) REFERENCES CLIENTE(CODCLI);
ALTER TABLE FUN_RESPONSAVEL ADD CONSTRAINT FK_FUN_RESP_FUN FOREIGN KEY (CODFUN) REFERENCES FUNCIONARIO(CODFUN);
ALTER TABLE FUN_RESPONSAVEL ADD CONSTRAINT FK_FUN_RES_EMP FOREIGN KEY(CODEMP) REFERENCES EMPRESA(CODEMP);
ALTER TABLE FUN_RESPONSAVEL ADD CONSTRAINT CHK_RESP_DATAS CHECK(DATINI <= DATFIM);

ALTER TABLE CONTATO ADD CONSTRAINT FK_CONT_CLI FOREIGN KEY (CODCLI) REFERENCES CLIENTE(CODCLI);

INSERT INTO TIPO_ATIVIDADE (CODTIPATI, NOMTIPATI) VALUES(1, 'REUNIAO');
INSERT INTO TIPO_ATIVIDADE (CODTIPATI, NOMTIPATI) VALUES(2, 'ALMOCO');
INSERT INTO TIPO_ATIVIDADE (CODTIPATI, NOMTIPATI) VALUES(3, 'WORKSHOP');

INSERT INTO TIPOFUNCIONARIO(CODTIPFUN, NOMTIPFUN) VALUES(1, 'FUNCIONARIO');
INSERT INTO TIPOFUNCIONARIO(CODTIPFUN, NOMTIPFUN) VALUES(2, 'ADMINISTRADOR');
INSERT INTO TIPOFUNCIONARIO(CODTIPFUN, NOMTIPFUN) VALUES(3, 'GERENTE');

COMMIT;
