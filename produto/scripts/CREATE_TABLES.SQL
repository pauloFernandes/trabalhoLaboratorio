CREATE TABLESPACE CRM DATAFILE 'C:\ORACLEXE\ORADATA\XE\CRM.DBF';
CREATE USER CRM IDENTIFIED BY CRM DEFAULT TABLESPACE CRM;
GRANT DBA TO CRM;
CONN CRM/CRM@XE;

/*
 * USUARIO: QUALQUER PESSOA QUE SE CADASTRAR NO CRM CRIARA UM NOVO REGISTRO EM USUARIO.
 */
CREATE TABLE USUARIO (
    CODUSU INTEGER     NOT NULL,   -- CODIGO DO USUARIO
	NOMUSU VARCHAR(40) NOT NULL,   -- NOME DO USUARIO
	LOGUSU VARCHAR(15) NOT NULL,   -- LOGIN DO USUARIO
	SENUSU VARCHAR(40) NOT NULL,   -- SENHA DO USUARIO
	IDUSUATIV CHAR(1) DEFAULT 'I'  -- SITUACAO DO USUARIO (ATIVO/INATIVO)
);


/*
 * EMPRESA A QUAL PERTENCE UM OU MAIS FUNCIONARIOS.
 */
CREATE TABLE EMPRESA (
	CODEMP INTEGER      NOT NULL,              -- CODIGO DA EMPRESA
	IDTIPINSJUR CHAR(1) DEFAULT 'J' NOT NULL , -- TIPO DE INSCRICAO JURIDICA (PESSOA JURIDICA OU FISICA)
	NUMINSJUR VARCHAR(14) NOT NULL,            -- NUMERO DA INSCRICAO JURIDICA (CPF OU CNPJ)
	NOMFAN VARCHAR(20) NOT NULL,               -- NOME FANTASIA
	RAZSOC VARCHAR(30),                        -- RAZAO SOCIAL
	TELEMP VARCHAR(9),                         -- TELEFONE DA EMPRESA
	CELEMP VARCHAR(9),                         -- CELULAR DA EMPRESA
	DESEND VARCHAR(30),                        -- DESCRICAO DO ENDERECO
	CODMUN INTEGER      NOT NULL,              -- CODIGO DO MUNICIPIO.
	CODEST INTEGER      NOT NULL,              -- CODIGO DO ESTADO.
	CODPAI INTEGER      NOT NULL               -- CODIGO DO PAIS
);

/*
 * DEFINE OS POSSIVEIS PAPEIS QUE O USUARIO PODE ASSUMIR NO SISTEMA. 
 */
CREATE TABLE TIPOFUNCIONARIO (
	CODTIPFUN INTEGER NOT NULL,
	NOMTIPFUN VARCHAR(20) NOT NULL
);

/*
 * FUNCIONARIO: RELACAO ENTRE USUARIO E EMPRESA. AS DATAS INICIAL E FINAL
 * AJUDARAO A MANTER O HISTORICO DO USUARIO EM RELACAO AS EMPRESAS QUE ESTE
 * ATUOU.
 */
CREATE TABLE FUNCIONARIO (
	CODFUN INTEGER  NOT NULL,    -- CODIGO DO FUNCIONARIO.
	CODUSU INTEGER  NOT NULL,    -- CODIGO DO USUARIO.
	CODEMP INTEGER  NOT NULL,    -- CODIGO DA EMPRESA.
	CODTIPFUN INTEGER NOT NULL,  -- TIPO DE USUARIO
	DATINI DATE NOT NULL,        -- DATA INICIAL DO PERIODO DO USUARIO NA EMPRESA
	DATFIM DATE                  -- DATA FINAL DO PERIODO DO USUARIO NA EMPRESA
);

/*
 * OBJETO QUE SERÁ MANIPULADO NO SISTEMA. DEFINE ATIVIDADES QUE SERÃO FEITAS ENTRE USUARIOS(FUNCINARIOS) 
 * DO SISTEMA E SEUS CLIENTES.
 */
CREATE TABLE ATIVIDADE (
	CODATI INTEGER     NOT NULL,  -- CODIGO DA ATIVIDADE
	NOMATI VARCHAR(30) NOT NULL,  -- NOME DA ATIVIDADE
	DESATI VARCHAR(500),          -- DESCRICAO DA ATIVIDADE
	DATINI DATE NOT NULL,         -- DATA INICIAL DA ATIVIDADE
	DATFIN DATE,                  -- DATA FINAL DA ATIVIDADE
	CODTIPATI INTEGER,            -- TIPO DA ATIVIDADE
	OBSANDATI VARCHAR(500),       -- OBSERVACAO DE ANDAMENTO DA ATIVIDADE
	STATUS CHAR(1) NOT NULL,      -- STATUS
	CODFUNRES INTEGER NOT NULL    -- CODIGO DE FUNCIONARIO RESPONSAVEL
);

/*
 * TIPOS DE ATIVIDADES.
 */
CREATE TABLE TIPO_ATIVIDADE (
    CODTIPATI INTEGER  NOT NULL,    -- CODIGO DO TIPO DE ATIVIDADE.
	NOMTIPATI VARCHAR(20) NOT NULL  -- NOME DO TIPO DE ATIVIDADE
);

/*
 * CABECALHO DO CONVITE ENVIADO AOS USUARIOS. AQUI SERAO DEFINIDOS ITENS COMO DESCRICAO DA ATIVIDADE,
 * TIPO DE ENVIO DE LEMBRETE (SE SERAO ENVIADOS LEMBRETES TODOS OS DIAS A PARTIR DE UMA DATA OU SE
 * SERA ENVIADO SOMENTE EM UM DIA).
 */
CREATE TABLE CONVITE (
	CODCON INTEGER  NOT NULL,    -- CODIGO DO CONVITE
	CODATI INTEGER  NOT NULL,    -- CODIGO DA ATIVIDADE
	DESCON VARCHAR(500),         -- DESCRICAO DO CONVITE
	TIPENVLEM CHAR(1) NOT NULL,  -- TIPO DE ENVIO DE LEMBRETE.
	DATENVLEM DATE NOT NULL      -- DATA DE ENVIO DE LEMBRETE. CASO A OPCAO DE TIPO DE ENVIO SEJA DE INTERVALO DE TEMPO, O SISTEMA ENVIARÁ LEMBRETES A PARTIR DA DATA DESCRITA AQUI.
);

/*
 * FUNCIONARIOS AOS QUAIS OS CONVITES SERAO ENVIADOS
 */
CREATE TABLE CONVIDADO (
	CODCON INTEGER  NOT NULL, -- CODIGO DO CONVITE.
	CODFUN INTEGER  NOT NULL  -- CODIGO DE FUNCIONARIO.
);

/*
 * CLIENTES QUE SERAO RELACIONADOS AS EMPRESAS
 */
CREATE TABLE CLIENTE (
	CODCLI INTEGER        NOT NULL,            -- CODIGO DO CLIENTE.
	CODEMP INTEGER        NOT NULL,            -- CODIGO DA EMPRESA "DONA" DO CLIENTE.
	NUMINSJUR VARCHAR(14) NOT NULL,            -- NUMERO DE INSCRICAO JURIDICA - CPF OU CNPJ.
	NOMFAN VARCHAR(20)    NOT NULL,            -- NOME FANTASIA.
	RAZSOC VARCHAR(30),                        -- RAZAO SOCIAL.
	TELEMP CHAR(9),                            -- TELEFONE EMPRESA.
	CELEMP CHAR(9),                            -- CELULAR EMPRESA.
	DESEND VARCHAR(30),                        -- DESCRICAO DO ENDERECO.
	CODMUN INTEGER       NOT NULL,             -- CODIGO DO MUNICIPIO.
	CODEST INTEGER       NOT NULL,             -- CODIGO DO ESTADO.
	CODPAI INTEGER       NOT NULL              -- CODIGO DO PAIS
);

/* 
 * FUNCIONARIO RESPONSAVEL PELO CONTATO COM O CLIENTE. AQUI TAMBÉM SERÁ GUARDADO O HISTORICO
 * DOS FUNCIONARIOS RESPONSAVEIS PELO CLIENTE.
 */
CREATE TABLE FUN_RESPONSAVEL (
	CODCLI INTEGER NOT NULL,  -- CODIGO DO CLIENTE.
	CODFUN INTEGER NOT NULL,  -- CODIGO DO FUNCIONARIO.
	DATINI DATE NOT NULL,     -- DATA INCIAL DO PERIODO QUE O FUNCIOARIO RESPONDE PELO CLIENTE.
	DATFIM DATE               -- DATA FINAL DO PERIODO QUE O FUNCIOARIO RESPONDE PELO CLIENTE.
);

/*
 * PESSOAS RELACIONADAS AOS CLIENTES, QUE REPRESENTARAO ESTES EM COMUNICACOES ENTRE EMPRESAS E CLIENTES.
 */
CREATE TABLE CONTATO (
	CODCON INTEGER     NOT NULL,  -- CODIGO DO CONTATO
	CODCLI INTEGER     NOT NULL,  -- CODIGO DO CLIENTE
	NOMCON VARCHAR(40) NOT NULL,  -- NOME DO CONTATO
	DATNAS DATE,                  -- DATA DE NASCIMENTO
	TELCON VARCHAR(9),            -- TELEFONE CONTATO
	CELCON VARCHAR(9),            -- CELULAR CONTATO.
	MAILCON VARCHAR(50)           -- EMAIL DO CONTATO.
);

/*
 * PAIS.
 */
CREATE TABLE PAIS (
	CODPAI INTEGER     NOT NULL, -- CODIGO DO PAIS
	NOMPAI VARCHAR(20) NOT NULL  -- NOME DO PAIS
);

/*
 * ESTADO
 */
CREATE TABLE ESTADO (
	CODEST INTEGER     NOT NULL, -- CODIGO DO ESTADO
	CODPAI INTEGER     NOT NULL, -- CODIGO DO PAIS
	NOMEST VARCHAR(20) NOT NULL  -- NOME DO ESTADO
);

/*
 * MUNICIPIO
 */
CREATE TABLE MUNICIPIO (
	CODMUN INTEGER   NOT NULL,   -- CODIGO DO MUNICIPIO
	CODEST INTEGER   NOT NULL,   -- CODIGO DO ESTADO
	CODPAI INTEGER   NOT NULL,   -- CODIGO DO PAIS
	NOMMUN VARCHAR(20) NOT NULL  -- NOME DO MUNICIPIO
);

ALTER TABLE USUARIO ADD CONSTRAINT PK_USUARIO PRIMARY KEY (CODUSU);
ALTER TABLE EMPRESA ADD CONSTRAINT PK_EMPRESA PRIMARY KEY (CODEMP);
ALTER TABLE TIPOFUNCIONARIO ADD CONSTRAINT PK_TIPFUN PRIMARY KEY (CODTIPFUN);
ALTER TABLE FUNCIONARIO ADD CONSTRAINT PK_FUNCIONARIO PRIMARY KEY (CODFUN);
ALTER TABLE ATIVIDADE ADD CONSTRAINT PK_ATIVIDADE PRIMARY KEY (CODATI);
ALTER TABLE TIPO_ATIVIDADE ADD CONSTRAINT PK_TIPOATIV PRIMARY KEY (CODTIPATI);
ALTER TABLE CONVITE ADD CONSTRAINT PK_CONVITE PRIMARY KEY (CODCON);
ALTER TABLE CONVIDADO ADD CONSTRAINT PK_CONVIDADO PRIMARY KEY (CODCON, CODFUN);
ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE PRIMARY KEY (CODCLI);
ALTER TABLE FUN_RESPONSAVEL ADD CONSTRAINT PK_FUN_RESP PRIMARY KEY(CODCLI, CODFUN, DATINI);
ALTER TABLE CONTATO ADD CONSTRAINT PK_CONTATO PRIMARY KEY (CODCON) ;
ALTER TABLE ESTADO ADD CONSTRAINT PK_ESTADO PRIMARY KEY (CODEST);
ALTER TABLE MUNICIPIO ADD CONSTRAINT PK_MUNINIPIO PRIMARY KEY (CODMUN);
ALTER TABLE PAIS ADD CONSTRAINT PK_PAIS PRIMARY KEY (CODPAI);

-- CHECK CONSTRAINT PARA VALIDAÇÃO DAS SITUACOES POSSIVEIS: ATIVO(A) E INATIVO(I)
ALTER TABLE USUARIO ADD CONSTRAINT CHK_IDSITUATIV CHECK(IDUSUATIV IN ('I', 'A'));


-- CHECK CONSTRAINT PARA TIPO DE INSCRICAO JURIDICA: J(JURIDICA) E F(FISICA).
ALTER TABLE EMPRESA ADD CONSTRAINT CHK_IDTIPINSJUR CHECK(IDTIPINSJUR IN ('J', 'F'));
ALTER TABLE EMPRESA ADD CONSTRAINT FK_EMP_MUNI FOREIGN KEY (CODMUN) REFERENCES MUNICIPIO(CODMUN);
ALTER TABLE EMPRESA ADD CONSTRAINT FK_EMP_EST FOREIGN KEY (CODEST) REFERENCES ESTADO(CODEST);
ALTER TABLE EMPRESA ADD CONSTRAINT FK_EMP_PAIS FOREIGN KEY (CODPAI) REFERENCES PAIS(CODPAI);


ALTER TABLE FUNCIONARIO ADD CONSTRAINT FK_FUNC_USU FOREIGN KEY (CODUSU) REFERENCES USUARIO(CODUSU);
ALTER TABLE FUNCIONARIO ADD CONSTRAINT FK_FUNC_EMP FOREIGN KEY (CODEMP) REFERENCES EMPRESA(CODEMP);
ALTER TABLE FUNCIONARIO ADD CONSTRAINT FK_FUNC_TIPOFUN FOREIGN KEY (CODTIPFUN) REFERENCES TIPOFUNCIONARIO(CODTIPFUN);
ALTER TABLE FUNCIONARIO ADD CONSTRAINT FK_FUNC_DATAS CHECK(DATINI <= DATFIM);


ALTER TABLE ATIVIDADE ADD CONSTRAINT CHK_DATAS_ATIV CHECK(DATINI <= DATFIN);
ALTER TABLE ATIVIDADE ADD CONSTRAINT FK_ATIV_TIPATI FOREIGN KEY (CODTIPATI) REFERENCES TIPO_ATIVIDADE(CODTIPATI);
ALTER TABLE ATIVIDADE ADD CONSTRAINT FK_ATIV_FUNRES FOREIGN KEY (CODFUNRES) REFERENCES FUNCIONARIO(CODFUN);

ALTER TABLE CONVITE ADD CONSTRAINT FK_CONV_ATIV FOREIGN KEY (CODATI) REFERENCES ATIVIDADE(CODATI);
-- CHECK CONSTRAINT PARA TIPO DE ENVIO DE LEMBRETE: 1 PARA SOMENTE NO DIA AGENDADO; 2, PARA DESDE O DIA AGENDADO ATÉ O DIA DA ATIVIDADE.
ALTER TABLE CONVITE ADD CONSTRAINT CHK_TIPENVLEM CHECK(TIPENVLEM IN ('1', '2'));

ALTER TABLE CONVIDADO ADD CONSTRAINT FK_CONVID_CON FOREIGN KEY (CODCON) REFERENCES CONVITE(CODCON);
ALTER TABLE CONVIDADO ADD CONSTRAINT FK_CONVID_FUN FOREIGN KEY (CODFUN) REFERENCES FUNCIONARIO(CODFUN);

ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLI_EMP FOREIGN KEY (CODEMP) REFERENCES EMPRESA(CODEMP);
ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLI_MUN FOREIGN KEY (CODMUN) REFERENCES MUNICIPIO(CODMUN);
ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLI_EST FOREIGN KEY (CODEST) REFERENCES ESTADO(CODEST);
ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLI_PAI FOREIGN KEY (CODPAI) REFERENCES PAIS(CODPAI);

ALTER TABLE FUN_RESPONSAVEL ADD CONSTRAINT FK_FUN_RESP_CLI FOREIGN KEY (CODCLI) REFERENCES CLIENTE(CODCLI);
ALTER TABLE FUN_RESPONSAVEL ADD CONSTRAINT FK_FUN_RESP_FUN FOREIGN KEY (CODFUN) REFERENCES FUNCIONARIO(CODFUN);
ALTER TABLE FUN_RESPONSAVEL ADD CONSTRAINT CHK_RESP_DATAS CHECK(DATINI <= DATFIM);

ALTER TABLE CONTATO ADD CONSTRAINT FK_CONT_CLI FOREIGN KEY (CODCLI) REFERENCES CLIENTE(CODCLI);

ALTER TABLE ESTADO ADD CONSTRAINT FK_EST_PAI FOREIGN KEY (CODPAI) REFERENCES PAIS(CODPAI);

ALTER TABLE MUNICIPIO ADD CONSTRAINT FK_MUN_EST FOREIGN KEY (CODEST) REFERENCES ESTADO(CODEST);
ALTER TABLE MUNICIPIO ADD CONSTRAINT FK_MUN_PAI FOREIGN KEY (CODPAI) REFERENCES PAIS(CODPAI);

INSERT INTO PAIS(CODPAI, NOMPAI) VALUES(1, 'BRASIL');

INSERT INTO ESTADO(CODEST, CODPAI, NOMEST) VALUES(1, 1, 'MINAS GERAIS');
INSERT INTO ESTADO(CODEST, CODPAI, NOMEST) VALUES(2, 1, 'SAO PAULO');
INSERT INTO ESTADO(CODEST, CODPAI, NOMEST) VALUES(3, 1, 'RIO DE JANEIRO');

INSERT INTO MUNICIPIO(CODMUN, CODEST, CODPAI, NOMMUN) VALUES(1, 1, 1, 'BELO HORIZONTE');
INSERT INTO MUNICIPIO(CODMUN, CODEST, CODPAI, NOMMUN) VALUES(2, 1, 1, 'CONTAGEM');
INSERT INTO MUNICIPIO(CODMUN, CODEST, CODPAI, NOMMUN) VALUES(3, 1, 1, 'BETIM');
INSERT INTO MUNICIPIO(CODMUN, CODEST, CODPAI, NOMMUN) VALUES(4, 2, 1, 'SAO PAULO');
INSERT INTO MUNICIPIO(CODMUN, CODEST, CODPAI, NOMMUN) VALUES(5, 2, 1, 'OSASCO');
INSERT INTO MUNICIPIO(CODMUN, CODEST, CODPAI, NOMMUN) VALUES(6, 3, 1, 'RIO DE JANEIRO');
INSERT INTO MUNICIPIO(CODMUN, CODEST, CODPAI, NOMMUN) VALUES(7, 3, 1, 'VOLTA REDONDA');

INSERT INTO TIPO_ATIVIDADE (CODTIPATI, NOMTIPATI) VALUES(1, 'REUNIAO');
INSERT INTO TIPO_ATIVIDADE (CODTIPATI, NOMTIPATI) VALUES(2, 'ALMOCO');
INSERT INTO TIPO_ATIVIDADE (CODTIPATI, NOMTIPATI) VALUES(3, 'WORKSHOP');

INSERT INTO TIPOFUNCIONARIO(CODTIPFUN, NOMTIPFUN) VALUES(1, 'FUNCIONARIO');
INSERT INTO TIPOFUNCIONARIO(CODTIPFUN, NOMTIPFUN) VALUES(2, 'ADMINISTRADOR');
INSERT INTO TIPOFUNCIONARIO(CODTIPFUN, NOMTIPFUN) VALUES(3, 'GERENTE');

COMMIT;